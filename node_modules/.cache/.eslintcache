[{"C:\\Users\\usuario\\programacion\\candy-crush\\src\\index.js":"1","C:\\Users\\usuario\\programacion\\candy-crush\\src\\App.js":"2","C:\\Users\\usuario\\programacion\\candy-crush\\src\\components\\ScoreBoard.js":"3"},{"size":223,"mtime":1642440041719,"results":"4","hashOfConfig":"5"},{"size":7612,"mtime":1643224202251,"results":"6","hashOfConfig":"5"},{"size":155,"mtime":1642440041139,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"zoqnob",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\usuario\\programacion\\candy-crush\\src\\index.js",[],["15","16"],"C:\\Users\\usuario\\programacion\\candy-crush\\src\\App.js",["17","18","19","20","21"],"C:\\Users\\usuario\\programacion\\candy-crush\\src\\components\\ScoreBoard.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":27,"column":11,"nodeType":"28","endLine":39,"endColumn":6,"suggestions":"29"},{"ruleId":"26","severity":1,"message":"30","line":41,"column":11,"nodeType":"28","endLine":56,"endColumn":6,"suggestions":"31"},{"ruleId":"26","severity":1,"message":"32","line":58,"column":11,"nodeType":"28","endLine":70,"endColumn":6,"suggestions":"33"},{"ruleId":"26","severity":1,"message":"34","line":72,"column":11,"nodeType":"28","endLine":87,"endColumn":6,"suggestions":"35"},{"ruleId":"26","severity":1,"message":"36","line":89,"column":11,"nodeType":"28","endLine":104,"endColumn":6},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"react-hooks/exhaustive-deps","The 'checkForColumnOfFour' function makes the dependencies of useEffect Hook (at line 169) change on every render. To fix this, wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.","VariableDeclarator",["39"],"The 'checkForRowOfFour' function makes the dependencies of useEffect Hook (at line 169) change on every render. To fix this, wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.",["40"],"The 'checkForColumnOfThree' function makes the dependencies of useEffect Hook (at line 169) change on every render. To fix this, wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.",["41"],"The 'checkForRowOfThree' function makes the dependencies of useEffect Hook (at line 169) change on every render. To fix this, wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.",["42"],"The 'moveIntoSquareBelow' function makes the dependencies of useEffect Hook (at line 169) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'moveIntoSquareBelow' in its own useCallback() Hook.","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},{"desc":"45","fix":"46"},{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.",{"range":"51","text":"52"},"Wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.",{"range":"53","text":"54"},"Wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.",{"range":"55","text":"56"},"Wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.",{"range":"57","text":"58"},[884,1457],"useCallback(() => {\r\n        for (let i = 0; i <= 39; i++) {\r\n            const columnOfFour = [i, i + width, i + width * 2, i + width * 3]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 4)\r\n                columnOfFour.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    })",[1491,2208],"useCallback(() => {\r\n        for (let i = 0; i < 64; i++) {\r\n            const rowOfFour = [i, i + 1, i + 2, i + 3]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (notValid.includes(i)) continue\r\n\r\n            if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 4)\r\n                rowOfFour.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    })",[2246,2807],"useCallback(() => {\r\n        for (let i = 0; i <= 47; i++) {\r\n            const columnOfThree = [i, i + width, i + width * 2]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 3)\r\n                columnOfThree.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    })",[2842,3524],"useCallback(() => {\r\n        for (let i = 0; i < 64; i++) {\r\n            const rowOfThree = [i, i + 1, i + 2]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (notValid.includes(i)) continue\r\n\r\n            if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 3)\r\n                rowOfThree.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    })"]