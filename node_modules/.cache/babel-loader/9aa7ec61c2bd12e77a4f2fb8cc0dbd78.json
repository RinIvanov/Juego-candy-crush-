{"ast":null,"code":"import _toConsumableArray from\"/Users/carlosvalerio/Desktop/proyecto-02/candy-crush-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/carlosvalerio/Desktop/proyecto-02/candy-crush-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import ScoreBoard from'./components/ScoreBoard';import blueCandy from'./images/blue-candy.png';import greenCandy from'./images/green-candy.png';import orangeCandy from'./images/orange-candy.png';import purpleCandy from'./images/purple-candy.png';import redCandy from'./images/red-candy.png';import yellowCandy from'./images/yellow-candy.png';import blank from'./images/blank.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var width=8;var candyColors=[blueCandy,orangeCandy,purpleCandy,redCandy,yellowCandy,greenCandy];var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentColorArrangement=_useState2[0],setCurrentColorArrangement=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),squareBeingDragged=_useState4[0],setSquareBeingDragged=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),squareBeingReplaced=_useState6[0],setSquareBeingReplaced=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),scoreDisplay=_useState8[0],setScoreDisplay=_useState8[1];var checkForColumnOfFour=function checkForColumnOfFour(){var _loop=function _loop(i){var columnOfFour=[i,i+width,i+width*2,i+width*3];var decidedColor=currentColorArrangement[i];var isBlank=currentColorArrangement[i]===blank;if(columnOfFour.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+4;});columnOfFour.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<=39;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}};var checkForRowOfFour=function checkForRowOfFour(){var _loop2=function _loop2(i){var rowOfFour=[i,i+1,i+2,i+3];var decidedColor=currentColorArrangement[i];var notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64];var isBlank=currentColorArrangement[i]===blank;if(notValid.includes(i))return\"continue\";if(rowOfFour.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+4;});rowOfFour.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<64;i++){var _ret2=_loop2(i);if(_ret2===\"continue\")continue;if(typeof _ret2===\"object\")return _ret2.v;}};var checkForColumnOfThree=function checkForColumnOfThree(){var _loop3=function _loop3(i){var columnOfThree=[i,i+width,i+width*2];var decidedColor=currentColorArrangement[i];var isBlank=currentColorArrangement[i]===blank;if(columnOfThree.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+3;});columnOfThree.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<=47;i++){var _ret3=_loop3(i);if(typeof _ret3===\"object\")return _ret3.v;}};var checkForRowOfThree=function checkForRowOfThree(){var _loop4=function _loop4(i){var rowOfThree=[i,i+1,i+2];var decidedColor=currentColorArrangement[i];var notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64];var isBlank=currentColorArrangement[i]===blank;if(notValid.includes(i))return\"continue\";if(rowOfThree.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+3;});rowOfThree.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<64;i++){var _ret4=_loop4(i);if(_ret4===\"continue\")continue;if(typeof _ret4===\"object\")return _ret4.v;}};var moveIntoSquareBelow=function moveIntoSquareBelow(){for(var i=0;i<=55;i++){var firstRow=[0,1,2,3,4,5,6,7];var isFirstRow=firstRow.includes(i);if(isFirstRow&&currentColorArrangement[i]===blank){var randomNumber=Math.floor(Math.random()*candyColors.length);currentColorArrangement[i]=candyColors[randomNumber];}if(currentColorArrangement[i+width]===blank){currentColorArrangement[i+width]=currentColorArrangement[i];currentColorArrangement[i]=blank;}}};var dragStart=function dragStart(e){setSquareBeingDragged(e.target);};var dragDrop=function dragDrop(e){setSquareBeingReplaced(e.target);};var dragEnd=function dragEnd(){var squareBeingDraggedId=parseInt(squareBeingDragged.getAttribute('data-id'));var squareBeingReplacedId=parseInt(squareBeingReplaced.getAttribute('data-id'));currentColorArrangement[squareBeingReplacedId]=squareBeingDragged.getAttribute('src');currentColorArrangement[squareBeingDraggedId]=squareBeingReplaced.getAttribute('src');var validMoves=[squareBeingDraggedId-1,squareBeingDraggedId-width,squareBeingDraggedId+1,squareBeingDraggedId+width];var validMove=validMoves.includes(squareBeingReplacedId);var isAColumnOfFour=checkForColumnOfFour();var isARowOfFour=checkForRowOfFour();var isAColumnOfThree=checkForColumnOfThree();var isARowOfThree=checkForRowOfThree();if(squareBeingReplacedId&&validMove&&(isARowOfThree||isARowOfFour||isAColumnOfFour||isAColumnOfThree)){setSquareBeingDragged(null);setSquareBeingReplaced(null);}else{currentColorArrangement[squareBeingReplacedId]=squareBeingReplaced.getAttribute('src');currentColorArrangement[squareBeingDraggedId]=squareBeingDragged.getAttribute('src');setCurrentColorArrangement(_toConsumableArray(currentColorArrangement));}};var createBoard=function createBoard(){var randomColorArrangement=[];for(var i=0;i<width*width;i++){var randomColor=candyColors[Math.floor(Math.random()*candyColors.length)];randomColorArrangement.push(randomColor);}setCurrentColorArrangement(randomColorArrangement);};useEffect(function(){createBoard();},[]);useEffect(function(){var timer=setInterval(function(){checkForColumnOfFour();checkForRowOfFour();checkForColumnOfThree();checkForRowOfThree();moveIntoSquareBelow();setCurrentColorArrangement(_toConsumableArray(currentColorArrangement));},100);return function(){return clearInterval(timer);};},[checkForColumnOfFour,checkForRowOfFour,checkForColumnOfThree,checkForRowOfThree,moveIntoSquareBelow,currentColorArrangement]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game\",children:currentColorArrangement.map(function(candyColor,index){return/*#__PURE__*/_jsx(\"img\",{src:candyColor,alt:candyColor,\"data-id\":index,draggable:true,onDragStart:dragStart,onDragOver:function onDragOver(e){return e.preventDefault();},onDragEnter:function onDragEnter(e){return e.preventDefault();},onDragLeave:function onDragLeave(e){return e.preventDefault();},onDrop:dragDrop,onDragEnd:dragEnd},index);})}),/*#__PURE__*/_jsx(ScoreBoard,{score:scoreDisplay})]});};export default App;","map":{"version":3,"sources":["/Users/carlosvalerio/Desktop/proyecto-02/candy-crush-reactjs/src/App.js"],"names":["useEffect","useState","ScoreBoard","blueCandy","greenCandy","orangeCandy","purpleCandy","redCandy","yellowCandy","blank","width","candyColors","App","currentColorArrangement","setCurrentColorArrangement","squareBeingDragged","setSquareBeingDragged","squareBeingReplaced","setSquareBeingReplaced","scoreDisplay","setScoreDisplay","checkForColumnOfFour","i","columnOfFour","decidedColor","isBlank","every","square","score","forEach","checkForRowOfFour","rowOfFour","notValid","includes","checkForColumnOfThree","columnOfThree","checkForRowOfThree","rowOfThree","moveIntoSquareBelow","firstRow","isFirstRow","randomNumber","Math","floor","random","length","dragStart","e","target","dragDrop","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","validMoves","validMove","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","createBoard","randomColorArrangement","randomColor","push","timer","setInterval","clearInterval","map","candyColor","index","preventDefault"],"mappings":"8WAAA,OAAQA,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,CAAd,CACA,GAAMC,CAAAA,WAAW,CAAG,CAChBR,SADgB,CAEhBE,WAFgB,CAGhBC,WAHgB,CAIhBC,QAJgB,CAKhBC,WALgB,CAMhBJ,UANgB,CAApB,CASA,GAAMQ,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACd,cAA8DX,QAAQ,CAAC,EAAD,CAAtE,wCAAOY,uBAAP,eAAgCC,0BAAhC,eACA,eAAoDb,QAAQ,CAAC,IAAD,CAA5D,yCAAOc,kBAAP,eAA2BC,qBAA3B,eACA,eAAsDf,QAAQ,CAAC,IAAD,CAA9D,yCAAOgB,mBAAP,eAA4BC,sBAA5B,eACA,eAAwCjB,QAAQ,CAAC,CAAD,CAAhD,yCAAOkB,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,0BACtBC,CADsB,EAE3B,GAAMC,CAAAA,YAAY,CAAG,CAACD,CAAD,CAAIA,CAAC,CAAGZ,KAAR,CAAeY,CAAC,CAAGZ,KAAK,CAAG,CAA3B,CAA8BY,CAAC,CAAGZ,KAAK,CAAG,CAA1C,CAArB,CACA,GAAMc,CAAAA,YAAY,CAAGX,uBAAuB,CAACS,CAAD,CAA5C,CACA,GAAMG,CAAAA,OAAO,CAAGZ,uBAAuB,CAACS,CAAD,CAAvB,GAA+Bb,KAA/C,CAEA,GAAIc,YAAY,CAACG,KAAb,CAAmB,SAAAC,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,GAAoCH,YAApC,EAAoD,CAACC,OAAzD,EAAzB,CAAJ,CAAgG,CAC5FL,eAAe,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAAG,CAAnB,EAAD,CAAf,CACAL,YAAY,CAACM,OAAb,CAAqB,SAAAF,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,CAAkClB,KAAtC,EAA3B,EACA,SAAO,IAAP,EACH,CAV0B,EAC/B,IAAK,GAAIa,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,EAArB,CAAyBA,CAAC,EAA1B,CAA8B,gBAArBA,CAAqB,0CAU7B,CACJ,CAZD,CAcA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,4BACnBR,CADmB,EAExB,GAAMS,CAAAA,SAAS,CAAG,CAACT,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAWA,CAAC,CAAG,CAAf,CAAkBA,CAAC,CAAG,CAAtB,CAAlB,CACA,GAAME,CAAAA,YAAY,CAAGX,uBAAuB,CAACS,CAAD,CAA5C,CACA,GAAMU,CAAAA,QAAQ,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,EAAV,CAAc,EAAd,CAAkB,EAAlB,CAAsB,EAAtB,CAA0B,EAA1B,CAA8B,EAA9B,CAAkC,EAAlC,CAAsC,EAAtC,CAA0C,EAA1C,CAA8C,EAA9C,CAAkD,EAAlD,CAAsD,EAAtD,CAA0D,EAA1D,CAA8D,EAA9D,CAAkE,EAAlE,CAAsE,EAAtE,CAA0E,EAA1E,CAA8E,EAA9E,CAAkF,EAAlF,CAAsF,EAAtF,CAA0F,EAA1F,CAAjB,CACA,GAAMP,CAAAA,OAAO,CAAGZ,uBAAuB,CAACS,CAAD,CAAvB,GAA+Bb,KAA/C,CAEA,GAAIuB,QAAQ,CAACC,QAAT,CAAkBX,CAAlB,CAAJ,CAA0B,iBAE1B,GAAIS,SAAS,CAACL,KAAV,CAAgB,SAAAC,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,GAAoCH,YAApC,EAAoD,CAACC,OAAzD,EAAtB,CAAJ,CAA6F,CACzFL,eAAe,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAAG,CAAnB,EAAD,CAAf,CACAG,SAAS,CAACF,OAAV,CAAkB,SAAAF,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,CAAkClB,KAAtC,EAAxB,EACA,SAAO,IAAP,EACH,CAbuB,EAC5B,IAAK,GAAIa,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,kBAApBA,CAAoB,wBAMC,SAND,0CAa5B,CACJ,CAfD,CAiBA,GAAMY,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,4BACvBZ,CADuB,EAE5B,GAAMa,CAAAA,aAAa,CAAG,CAACb,CAAD,CAAIA,CAAC,CAAGZ,KAAR,CAAeY,CAAC,CAAGZ,KAAK,CAAG,CAA3B,CAAtB,CACA,GAAMc,CAAAA,YAAY,CAAGX,uBAAuB,CAACS,CAAD,CAA5C,CACA,GAAMG,CAAAA,OAAO,CAAGZ,uBAAuB,CAACS,CAAD,CAAvB,GAA+Bb,KAA/C,CAEA,GAAI0B,aAAa,CAACT,KAAd,CAAoB,SAAAC,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,GAAoCH,YAApC,EAAoD,CAACC,OAAzD,EAA1B,CAAJ,CAAiG,CAC7FL,eAAe,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAAG,CAAnB,EAAD,CAAf,CACAO,aAAa,CAACN,OAAd,CAAsB,SAAAF,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,CAAkClB,KAAtC,EAA5B,EACA,SAAO,IAAP,EACH,CAV2B,EAChC,IAAK,GAAIa,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,EAArB,CAAyBA,CAAC,EAA1B,CAA8B,kBAArBA,CAAqB,4CAU7B,CACJ,CAZD,CAcA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,4BACpBd,CADoB,EAEzB,GAAMe,CAAAA,UAAU,CAAG,CAACf,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAWA,CAAC,CAAG,CAAf,CAAnB,CACA,GAAME,CAAAA,YAAY,CAAGX,uBAAuB,CAACS,CAAD,CAA5C,CACA,GAAMU,CAAAA,QAAQ,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAe,EAAf,CAAmB,EAAnB,CAAuB,EAAvB,CAA2B,EAA3B,CAA+B,EAA/B,CAAmC,EAAnC,CAAuC,EAAvC,CAA2C,EAA3C,CAA+C,EAA/C,CAAmD,EAAnD,CAAuD,EAAvD,CAA2D,EAA3D,CAAjB,CACA,GAAMP,CAAAA,OAAO,CAAGZ,uBAAuB,CAACS,CAAD,CAAvB,GAA+Bb,KAA/C,CAEA,GAAIuB,QAAQ,CAACC,QAAT,CAAkBX,CAAlB,CAAJ,CAA0B,iBAE1B,GAAIe,UAAU,CAACX,KAAX,CAAiB,SAAAC,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,GAAoCH,YAApC,EAAoD,CAACC,OAAzD,EAAvB,CAAJ,CAA8F,CAC1FL,eAAe,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAAG,CAAnB,EAAD,CAAf,CACAS,UAAU,CAACR,OAAX,CAAmB,SAAAF,MAAM,QAAId,CAAAA,uBAAuB,CAACc,MAAD,CAAvB,CAAkClB,KAAtC,EAAzB,EACA,SAAO,IAAP,EACH,CAbwB,EAC7B,IAAK,GAAIa,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,kBAApBA,CAAoB,wBAMC,SAND,0CAa5B,CACJ,CAfD,CAiBA,GAAMgB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,IAAK,GAAIhB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,EAArB,CAAyBA,CAAC,EAA1B,CAA8B,CAC1B,GAAMiB,CAAAA,QAAQ,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAjB,CACA,GAAMC,CAAAA,UAAU,CAAGD,QAAQ,CAACN,QAAT,CAAkBX,CAAlB,CAAnB,CAEA,GAAIkB,UAAU,EAAI3B,uBAAuB,CAACS,CAAD,CAAvB,GAA+Bb,KAAjD,CAAwD,CACpD,GAAIgC,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBjC,WAAW,CAACkC,MAAvC,CAAnB,CACAhC,uBAAuB,CAACS,CAAD,CAAvB,CAA6BX,WAAW,CAAC8B,YAAD,CAAxC,CACH,CAED,GAAK5B,uBAAuB,CAACS,CAAC,CAAGZ,KAAL,CAAxB,GAAyCD,KAA7C,CAAoD,CAChDI,uBAAuB,CAACS,CAAC,CAAGZ,KAAL,CAAvB,CAAqCG,uBAAuB,CAACS,CAAD,CAA5D,CACAT,uBAAuB,CAACS,CAAD,CAAvB,CAA6Bb,KAA7B,CACH,CACJ,CACJ,CAfD,CAiBA,GAAMqC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAO,CACrB/B,qBAAqB,CAAC+B,CAAC,CAACC,MAAH,CAArB,CACH,CAFD,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACF,CAAD,CAAO,CACpB7B,sBAAsB,CAAC6B,CAAC,CAACC,MAAH,CAAtB,CACH,CAFD,CAGA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAMC,CAAAA,oBAAoB,CAAGC,QAAQ,CAACrC,kBAAkB,CAACsC,YAAnB,CAAgC,SAAhC,CAAD,CAArC,CACA,GAAMC,CAAAA,qBAAqB,CAAGF,QAAQ,CAACnC,mBAAmB,CAACoC,YAApB,CAAiC,SAAjC,CAAD,CAAtC,CAEAxC,uBAAuB,CAACyC,qBAAD,CAAvB,CAAiDvC,kBAAkB,CAACsC,YAAnB,CAAgC,KAAhC,CAAjD,CACAxC,uBAAuB,CAACsC,oBAAD,CAAvB,CAAgDlC,mBAAmB,CAACoC,YAApB,CAAiC,KAAjC,CAAhD,CAEA,GAAME,CAAAA,UAAU,CAAG,CACfJ,oBAAoB,CAAG,CADR,CAEfA,oBAAoB,CAAGzC,KAFR,CAGfyC,oBAAoB,CAAG,CAHR,CAIfA,oBAAoB,CAAGzC,KAJR,CAAnB,CAOA,GAAM8C,CAAAA,SAAS,CAAGD,UAAU,CAACtB,QAAX,CAAoBqB,qBAApB,CAAlB,CAEA,GAAMG,CAAAA,eAAe,CAAGpC,oBAAoB,EAA5C,CACA,GAAMqC,CAAAA,YAAY,CAAG5B,iBAAiB,EAAtC,CACA,GAAM6B,CAAAA,gBAAgB,CAAGzB,qBAAqB,EAA9C,CACA,GAAM0B,CAAAA,aAAa,CAAGxB,kBAAkB,EAAxC,CAEA,GAAIkB,qBAAqB,EACrBE,SADA,GAECI,aAAa,EAAIF,YAAjB,EAAiCD,eAAjC,EAAoDE,gBAFrD,CAAJ,CAE4E,CACxE3C,qBAAqB,CAAC,IAAD,CAArB,CACAE,sBAAsB,CAAC,IAAD,CAAtB,CACH,CALD,IAKO,CACHL,uBAAuB,CAACyC,qBAAD,CAAvB,CAAiDrC,mBAAmB,CAACoC,YAApB,CAAiC,KAAjC,CAAjD,CACAxC,uBAAuB,CAACsC,oBAAD,CAAvB,CAAgDpC,kBAAkB,CAACsC,YAAnB,CAAgC,KAAhC,CAAhD,CACAvC,0BAA0B,oBAAKD,uBAAL,EAA1B,CACH,CACJ,CA/BD,CAkCA,GAAMgD,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,sBAAsB,CAAG,EAA/B,CACA,IAAK,GAAIxC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGZ,KAAK,CAAGA,KAA5B,CAAmCY,CAAC,EAApC,CAAwC,CACpC,GAAMyC,CAAAA,WAAW,CAAGpD,WAAW,CAAC+B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBjC,WAAW,CAACkC,MAAvC,CAAD,CAA/B,CACAiB,sBAAsB,CAACE,IAAvB,CAA4BD,WAA5B,EACH,CACDjD,0BAA0B,CAACgD,sBAAD,CAA1B,CACH,CAPD,CASA9D,SAAS,CAAC,UAAM,CACZ6D,WAAW,GACd,CAFQ,CAEN,EAFM,CAAT,CAIA7D,SAAS,CAAC,UAAM,CACZ,GAAMiE,CAAAA,KAAK,CAAGC,WAAW,CAAC,UAAM,CAC5B7C,oBAAoB,GACpBS,iBAAiB,GACjBI,qBAAqB,GACrBE,kBAAkB,GAClBE,mBAAmB,GACnBxB,0BAA0B,oBAAKD,uBAAL,EAA1B,CACH,CAPwB,CAOtB,GAPsB,CAAzB,CAQA,MAAO,kBAAMsD,CAAAA,aAAa,CAACF,KAAD,CAAnB,EAAP,CACH,CAVQ,CAUN,CAAC5C,oBAAD,CAAuBS,iBAAvB,CAA0CI,qBAA1C,CAAiEE,kBAAjE,CAAqFE,mBAArF,CAA0GzB,uBAA1G,CAVM,CAAT,CAaA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,YAAK,SAAS,CAAC,MAAf,UACKA,uBAAuB,CAACuD,GAAxB,CAA4B,SAACC,UAAD,CAAaC,KAAb,qBACzB,YAEI,GAAG,CAAED,UAFT,CAGI,GAAG,CAAEA,UAHT,CAII,UAASC,KAJb,CAKI,SAAS,CAAE,IALf,CAMI,WAAW,CAAExB,SANjB,CAOI,UAAU,CAAE,oBAACC,CAAD,QAAOA,CAAAA,CAAC,CAACwB,cAAF,EAAP,EAPhB,CAQI,WAAW,CAAE,qBAACxB,CAAD,QAAOA,CAAAA,CAAC,CAACwB,cAAF,EAAP,EARjB,CASI,WAAW,CAAE,qBAACxB,CAAD,QAAOA,CAAAA,CAAC,CAACwB,cAAF,EAAP,EATjB,CAUI,MAAM,CAAEtB,QAVZ,CAWI,SAAS,CAAEC,OAXf,EACSoB,KADT,CADyB,EAA5B,CADL,EADJ,cAkBI,KAAC,UAAD,EAAY,KAAK,CAAEnD,YAAnB,EAlBJ,GADJ,CAsBH,CA7KD,CA+KA,cAAeP,CAAAA,GAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport ScoreBoard from './components/ScoreBoard'\nimport blueCandy from './images/blue-candy.png'\nimport greenCandy from './images/green-candy.png'\nimport orangeCandy from './images/orange-candy.png'\nimport purpleCandy from './images/purple-candy.png'\nimport redCandy from './images/red-candy.png'\nimport yellowCandy from './images/yellow-candy.png'\nimport blank from './images/blank.png'\n\nconst width = 8\nconst candyColors = [\n    blueCandy,\n    orangeCandy,\n    purpleCandy,\n    redCandy,\n    yellowCandy,\n    greenCandy\n]\n\nconst App = () => {\n    const [currentColorArrangement, setCurrentColorArrangement] = useState([])\n    const [squareBeingDragged, setSquareBeingDragged] = useState(null)\n    const [squareBeingReplaced, setSquareBeingReplaced] = useState(null)\n    const [scoreDisplay, setScoreDisplay] = useState(0)\n\n    const checkForColumnOfFour = () => {\n        for (let i = 0; i <= 39; i++) {\n            const columnOfFour = [i, i + width, i + width * 2, i + width * 3]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                columnOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForRowOfFour = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfFour = [i, i + 1, i + 2, i + 3]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                rowOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForColumnOfThree = () => {\n        for (let i = 0; i <= 47; i++) {\n            const columnOfThree = [i, i + width, i + width * 2]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                columnOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForRowOfThree = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i + 1, i + 2]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                rowOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const moveIntoSquareBelow = () => {\n        for (let i = 0; i <= 55; i++) {\n            const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\n            const isFirstRow = firstRow.includes(i)\n\n            if (isFirstRow && currentColorArrangement[i] === blank) {\n                let randomNumber = Math.floor(Math.random() * candyColors.length)\n                currentColorArrangement[i] = candyColors[randomNumber]\n            }\n\n            if ((currentColorArrangement[i + width]) === blank) {\n                currentColorArrangement[i + width] = currentColorArrangement[i]\n                currentColorArrangement[i] = blank\n            }\n        }\n    }\n\n    const dragStart = (e) => {\n        setSquareBeingDragged(e.target)\n    }\n    const dragDrop = (e) => {\n        setSquareBeingReplaced(e.target)\n    }\n    const dragEnd = () => {\n        const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\n        const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\n\n        currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.getAttribute('src')\n        currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.getAttribute('src')\n\n        const validMoves = [\n            squareBeingDraggedId - 1,\n            squareBeingDraggedId - width,\n            squareBeingDraggedId + 1,\n            squareBeingDraggedId + width\n        ]\n\n        const validMove = validMoves.includes(squareBeingReplacedId)\n\n        const isAColumnOfFour = checkForColumnOfFour()\n        const isARowOfFour = checkForRowOfFour()\n        const isAColumnOfThree = checkForColumnOfThree()\n        const isARowOfThree = checkForRowOfThree()\n\n        if (squareBeingReplacedId &&\n            validMove &&\n            (isARowOfThree || isARowOfFour || isAColumnOfFour || isAColumnOfThree)) {\n            setSquareBeingDragged(null)\n            setSquareBeingReplaced(null)\n        } else {\n            currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src')\n            currentColorArrangement[squareBeingDraggedId] = squareBeingDragged.getAttribute('src')\n            setCurrentColorArrangement([...currentColorArrangement])\n        }\n    }\n\n\n    const createBoard = () => {\n        const randomColorArrangement = []\n        for (let i = 0; i < width * width; i++) {\n            const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)]\n            randomColorArrangement.push(randomColor)\n        }\n        setCurrentColorArrangement(randomColorArrangement)\n    }\n\n    useEffect(() => {\n        createBoard()\n    }, [])\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            checkForColumnOfFour()\n            checkForRowOfFour()\n            checkForColumnOfThree()\n            checkForRowOfThree()\n            moveIntoSquareBelow()\n            setCurrentColorArrangement([...currentColorArrangement])\n        }, 100)\n        return () => clearInterval(timer)\n    }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement])\n\n\n    return (\n        <div className=\"app\">\n            <div className=\"game\">\n                {currentColorArrangement.map((candyColor, index) => (\n                    <img\n                        key={index}\n                        src={candyColor}\n                        alt={candyColor}\n                        data-id={index}\n                        draggable={true}\n                        onDragStart={dragStart}\n                        onDragOver={(e) => e.preventDefault()}\n                        onDragEnter={(e) => e.preventDefault()}\n                        onDragLeave={(e) => e.preventDefault()}\n                        onDrop={dragDrop}\n                        onDragEnd={dragEnd}\n                    />\n                ))}\n            </div>\n            <ScoreBoard score={scoreDisplay}/>\n        </div>\n    )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}